<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Products on SaveH2o v0.03</title><link>https://saveh2o.github.io/docs/docs/products/</link><description>Recent content in Products on SaveH2o v0.03</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://saveh2o.github.io/docs/docs/products/index.xml" rel="self" type="application/rss+xml"/><item><title>Time</title><link>https://saveh2o.github.io/docs/docs/products/time/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://saveh2o.github.io/docs/docs/products/time/</guid><description>Times of Gain The following rules add more details to the Process specification:
Connected as a Cyclo, the Process is specified by the timing of its Stages. Stages consumes Resources, both from Facility and from Cyclo. The Stage allocates Resources from the Facility to accomplish its task. Every Stage requires Skills to accomplish its task. The Skill is provided by a combination of Workers and/or Tools. The Stage also allocates Resources from the Cyclo to accomplish its task.</description></item><item><title>Cyclo Graph</title><link>https://saveh2o.github.io/docs/docs/products/graph/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://saveh2o.github.io/docs/docs/products/graph/</guid><description>Cyclo Graph The Cyclo graph has Product and Stage vertices and a bidirecional sendW edge.
The raw material is a product that enters the process through a stage. Then, it becomes a work-in-process (wip) asset that is sent from one stage to another, until the final product is obtained. The sendW edge expects to send WIPs along the production flow, clustered by timestep.
// cyclo-v1-schema schema.vertexLabel(&amp;#39;Stage&amp;#39;). ifNotExists(). partitionBy(&amp;#39;stage_name&amp;#39;, Text). create(); schema.</description></item></channel></rss>